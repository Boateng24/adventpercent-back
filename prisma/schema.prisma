// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Song {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  artist      String
  album       String?
  genre       String?
  duration    Int?
  lyrics      String?
  // New engagement metrics
  playCount   Int       @default(0)
  skipCount   Int       @default(0)
  completeRate Float     @default(0)
  shares      Int       @default(0)
  favorites   Int       @default(0)
  playlistAdds Int      @default(0)
  track       String
  image       String?
  playlist  Playlist? @relation(fields: [playlistId], references: [id], onDelete: Cascade)
  playlistId String? @db.ObjectId
  trending    Trending[]
  createdAt   DateTime?  @default(now())
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  username  String
  firstname String?
  lastname  String?
  provider   String?  // Add provider for Google/Facebook
  providerId String?  // Add provider's unique ID (Google/Facebook UID)
  playlists Playlist[]
  premium   Boolean  @default(false)
  userType userType @default(user)
}

model Playlist {
  id    String   @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  user  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String  @db.ObjectId
  songs Song[]   
}

model Trending {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  song          Song     @relation(fields: [songId], references: [id])
  songId        String   @db.ObjectId
  // New metrics
  dailyPlays    Int      @default(0)
  playVelocity  Float    @default(0)
  skipRate      Float    @default(0)
  shares        Int      @default(0)
  // Time tracking
  weekNumber    Int?
  year          Int?
  lastUpdated   DateTime @default(now())
  rank          Int?
  
  @@unique([songId, weekNumber, year])
  @@index([weekNumber, year])
  @@index([playVelocity])
}



enum userType {
  artist
  user
}

